(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{494:function(t,s,a){"use strict";a.r(s);var n=a(4),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("blockquote",[a("p",[t._v("本文翻译自：https://www.jstwister.com/post/unit-testing-beginners-guide-testing-functions/")])]),t._v(" "),a("p",[t._v("如果你正打算使用unit test来测试你的代码而不知道如何开始，或者想要了解ut的最佳实践，这篇文章或许就是你正寻找的东西。")]),t._v(" "),a("p",[t._v("在这个系列中，我将带领你从基本原则开始进入单元测试的世界，到最后你将掌握一些目前你可能不知道的高级技巧。")]),t._v(" "),a("p",[t._v("系好安全带，准备出发。")]),t._v(" "),a("p",[t._v("在开始本教程之前，你需要先安装以下依赖：")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://nodejs.org/en/download/",target:"_blank",rel:"noopener noreferrer"}},[t._v("NodeJs"),a("OutboundLink")],1),t._v(" - 你可能已经安装过了")]),t._v(" "),a("li",[a("a",{attrs:{href:"https://jestjs.io/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Jest"),a("OutboundLink")],1),t._v(" - 这将是我们会使用到的单元测试框架")])]),t._v(" "),a("p",[t._v("为了确保我们能够顺利开始，你需要完成如下的步骤：")]),t._v(" "),a("ol",[a("li",[t._v("确保NodeJs已经安装: "),a("code",[t._v("node -v")]),t._v(". 请确保你的"),a("code",[t._v("Node")]),t._v("版本>= 6.x.")]),t._v(" "),a("li",[t._v("新建一个名为"),a("code",[t._v("unit-testing-functions")]),t._v("的文件夹")]),t._v(" "),a("li",[t._v("进入该文件夹（"),a("code",[t._v("cd unit-testing-functions")]),t._v("）并初始化项目（"),a("code",[t._v("npm init --yes")]),t._v("）")]),t._v(" "),a("li",[t._v("现在你应该可以在该目录下看到"),a("code",[t._v("package.json")]),t._v("文件")]),t._v(" "),a("li",[t._v("安装"),a("code",[t._v("Jest")]),t._v(": "),a("code",[t._v("npm i jest --save-dev")])]),t._v(" "),a("li",[t._v("你可以通过该命令验证"),a("code",[t._v("Jest")]),t._v("是否正确安装: "),a("code",[t._v("./node_modules/.bin/jest -v")])])]),t._v(" "),a("p",[t._v("一切准备就绪，让我们开始单元测试之旅。")]),t._v(" "),a("p",[t._v("我们将从简单的函数开始我们的学习，并且随着学习的深入，我们将在系列课程的后边涉及到更加复杂的场景。")]),t._v(" "),a("h2",{attrs:{id:"准备被测代码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#准备被测代码"}},[t._v("#")]),t._v(" 准备被测代码")]),t._v(" "),a("p",[t._v("首先创建一个简单的函数:")]),t._v(" "),a("p",[t._v("在"),a("code",[t._v("unit-testing-functions")]),t._v("文件夹下新建文件: "),a("code",[t._v("sum.js")]),t._v("并定义以下函数：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("module"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("exports")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sum")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("该函数将会是我们的被测对象。在单元测试中，我们希望能够有尽可能多的输入类型，以确保覆盖到所有的分支条件。")]),t._v(" "),a("p",[t._v("虽然目前我们的函数中并没有分支条件，但我们还是需要改变输入参数来确保该函数在今后的修改中也能够正确运行。")]),t._v(" "),a("h2",{attrs:{id:"认识测试文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#认识测试文件"}},[t._v("#")]),t._v(" 认识测试文件")]),t._v(" "),a("p",[t._v("每个代码文件都应该有一个与之对应的"),a("code",[t._v("Spec")]),t._v("文件， 该文件通常和代码文件放在一起。让我们新建一个 "),a("code",[t._v("sum.spec.js")]),t._v("。")]),t._v(" "),a("p",[t._v("在"),a("code",[t._v("spec")]),t._v("文件中，我们将放置测试代码。")]),t._v(" "),a("p",[t._v("为了方便管理和产生报告，包括"),a("code",[t._v("jest")]),t._v("在内的测试框架都将测试代码放置在"),a("code",[t._v("test suit")]),t._v("里边，每个"),a("code",[t._v("test suit")]),t._v("都由一个或多个测试组成 。")]),t._v(" "),a("p",[t._v("现在，让我们在"),a("code",[t._v("sum.spec.js")]),t._v("中添加第一个测试。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" sum "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./sum.js"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("describe")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sum suite"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Should add 2 positive numbers together and return the result"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("expect")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sum")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toBe")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("是不是不太明白上边的代码？没关系，下边我们一一解释：")]),t._v(" "),a("p",[t._v("这一步做了什么呢？")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" sum "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./sum.js"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("这一步，我们引入被测对象。"),a("code",[t._v("jest")]),t._v("是运行在"),a("code",[t._v("NodeJs")]),t._v("端， 所以我们在这里使用了"),a("code",[t._v("module.exports")]),t._v("来导出函数并使用"),a("code",[t._v("require")]),t._v("在其他文件中引用。")]),t._v(" "),a("p",[t._v("下一步，我们定义了一个"),a("code",[t._v("test suit")]),t._v("，所有和"),a("code",[t._v("sum")]),t._v("函数相关的测试将被放到这里：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("describe")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sum suite"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Define here the individual tests")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("最后，我们添加了第一个测试（在接下来的教程中，我们会添加更多的测试）：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Should add 2 positive numbers together and return the result"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("expect")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sum")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toBe")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("关于下面这一部分的代码你可能还是不太清楚，没关系，让我们来解释一下：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("expect")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sum")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toBe")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("这是我们单元测试的一个基本要素，我们称之为"),a("code",[t._v("assertion")]),t._v("(断言)。")]),t._v(" "),a("p",[t._v("断言是描述程序应有行为的一种基本方法。在我们的例子里边，我们期望调用"),a("code",[t._v("sum (1, 2)")]),t._v(" 能够得到结果3。")]),t._v(" "),a("p",[t._v("例子中的"),a("code",[t._v("toBe")]),t._v("被称为"),a("code",[t._v("matcher")]),t._v("(匹配器)。"),a("code",[t._v("jest")]),t._v("提供了很多的"),a("code",[t._v("matcher")]),t._v("，每一个"),a("code",[t._v("matcher")]),t._v("都向我们提供某方面验证的帮助，例如：判断某些测试中对象是否相等。")]),t._v(" "),a("p",[t._v("那"),a("code",[t._v("expect")]),t._v("是怎么来的呢？我们并没有在文件中引用它。")]),t._v(" "),a("p",[t._v("这是因为"),a("code",[t._v("jest")]),t._v("将"),a("code",[t._v("describe")]),t._v(", "),a("code",[t._v("test")]),t._v(", "),a("code",[t._v("expect")]),t._v("等函数注册成为了全局变量，所以我们不需要再单独引入他们。"),a("a",{attrs:{href:"https://jestjs.io/docs/en/api",target:"_blank",rel:"noopener noreferrer"}},[t._v("这里"),a("OutboundLink")],1),t._v("可以查看完整的函数列表。")]),t._v(" "),a("h2",{attrs:{id:"运行我们的测试用例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#运行我们的测试用例"}},[t._v("#")]),t._v(" 运行我们的测试用例")]),t._v(" "),a("p",[t._v("你可以选择在我们的工作目录("),a("code",[t._v("unit-testing-functions")]),t._v(")下直接调用"),a("code",[t._v("jest")]),t._v("："),a("code",[t._v("./node_modules/.bin/jest")])]),t._v(" "),a("p",[t._v("另外一种更好的跨平台解决方案是定义"),a("code",[t._v("NPM script")]),t._v("。现在打开"),a("code",[t._v("package.json")]),t._v("，找到下面这一段：")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"scripts"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"test"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"echo \\"Error: no test specified\\" && exit 1"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("修改为：")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"scripts"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"test"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"jest"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("可以看到，我们并没有指定"),a("code",[t._v("jest")]),t._v("的全路径，这是因为"),a("code",[t._v("NPM")]),t._v("会先从"),a("code",[t._v("./node_modules/.bin/")]),t._v("查找可执行文件。")]),t._v(" "),a("p",[t._v("现在我们开始运行"),a("code",[t._v("NPM script")]),t._v(": "),a("code",[t._v("npm run test")]),t._v("；")]),t._v(" "),a("p",[t._v("你可以看到如下的输出：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("PASS  ./sum.spec.js\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sum")]),t._v(" suite\n    ✓ Should "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" positive numbers together and "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("return")]),t._v(" the result "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("6ms"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nTest Suites: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" passed, "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" total\nTests:       "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" passed, "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" total\nSnapshots:   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" total\nTime:        "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(".089s\nRan all "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("test")]),t._v(" suites.\n")])])]),a("p",[t._v("Awesome, 我们第一个测试已经通过了。")]),t._v(" "),a("p",[t._v("现在让我们快进到几个月以后，假定有另一个同事修改了"),a("code",[t._v("sum")]),t._v("函数：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("module"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("exports")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sum")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("为了演示，请你也做同样的修改。\n现在，该同事需要在提交代码之前运行测试："),a("code",[t._v("npm run test")]),t._v(".")]),t._v(" "),a("p",[t._v("然后我们可以看到如下结果：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("FAIL  ./sum.spec.js\n  ● "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sum")]),t._v(" suite › Should "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" positive numbers together and "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("return")]),t._v(" the result\n\n    expect"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("received"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(".toBe"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("expected"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    Expected value to be "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("using "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(":\n      "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n    Received:\n      -1\n\n      at Object."),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("anonymous"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sum.spec.js:5:27"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      at Promise.resolve.then.el "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node_modules/p-map/index.js:42:16"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      at process._tickCallback "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("internal/process/next_tick.js:103:7"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sum")]),t._v(" suite\n    ✕ Should "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" positive numbers together and "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("return")]),t._v(" the result "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("9ms"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nTest Suites: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" failed, "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" total\nTests:       "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" failed, "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" total\nSnapshots:   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" total\nTime:        "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(".148s\nRan all "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("test")]),t._v(" suites.\n")])])]),a("p",[t._v("通过检查以上信息，我们可以很容易地推断出：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("sum.spec.js")]),t._v("中的第5行出错了，并且从stack trace中可以看到具体错误："),a("code",[t._v("at Object.<anonymous> (sum.spec.js:5:27)")]),t._v(".")]),t._v(" "),a("li",[t._v("仔细核对以上错误会发现，出错的代码为："),a("code",[t._v("expect(sum(1,2)).toBe(3);")]),t._v(".")]),t._v(" "),a("li",[t._v("检查控制台输出我们会发现：我们期待的输出值为"),a("code",[t._v("3")]),t._v("但是我们得到的输出却为"),a("code",[t._v("-1")]),t._v(".\n由此可见，"),a("code",[t._v("unit tests")]),t._v(" 既可以防止出现回归错误又可以使我们的代码和文档保持一致。")])]),t._v(" "),a("p",[t._v("现在请将"),a("code",[t._v("a-b")]),t._v("改回到"),a("code",[t._v("a+b")]),t._v(".")]),t._v(" "),a("h2",{attrs:{id:"测试覆盖率"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#测试覆盖率"}},[t._v("#")]),t._v(" 测试覆盖率")]),t._v(" "),a("p",[t._v("我们已经完成了第一个测试，但是如果要覆盖到"),a("code",[t._v("sum")]),t._v("函数的所有分支的话，我们还有很多的场景没有被测试到。\n从测试函数的角度而言，我们不仅需要考虑到我们今天实现的函数，而且我们还应该考虑该如何进行演进。我们需要做到的是发现所有导致case不能正常通过的改动，即使有人在之后修改了函数的实现并且添加了新的检查和分支。")]),t._v(" "),a("p",[t._v("那么，就让我们添加更多的case来提高我们的覆盖率吧。")]),t._v(" "),a("p",[t._v("在"),a("code",[t._v("sum.spec.js")]),t._v("中添加如下代码：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" sum "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./sum.js"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("describe")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sum suite"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Should add 2 positive numbers together and return the result"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("expect")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sum")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toBe")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Should add 2 negative numbers together and return the result"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("expect")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sum")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toBe")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Should add 1 positive and 1 negative numbers together and return the result"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("expect")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sum")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toBe")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Should add 1 positive and 0 together and return the result"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("expect")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sum")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toBe")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Should add 1 negative and 0 together and return the result"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("expect")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sum")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toBe")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("我们在之前的case下边又添加了4条新的case。注意我们是如何修改我们输入的数值，又是如何尝试去覆盖边界情况.（例如：+ 0 的情况）")]),t._v(" "),a("p",[t._v("再次运行我们的测试： "),a("code",[t._v("npm run test")]),t._v(". 我们可以得到下面的输出：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("PASS  ./sum.spec.js\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sum")]),t._v(" suite\n    ✓ Should "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" positive numbers together and "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("return")]),t._v(" the result "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("6ms"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    ✓ Should "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" negative numbers together and "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("return")]),t._v(" the result "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("1ms"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    ✓ Should "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" positive and "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" negative numbers together and "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("return")]),t._v(" the result "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("1ms"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    ✓ Should "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" positive and "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" together and "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("return")]),t._v(" the result "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("1ms"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    ✓ Should "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" negative and "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" together and "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("return")]),t._v(" the result\n\nTest Suites: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" passed, "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" total\nTests:       "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" passed, "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" total\nSnapshots:   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" total\nTime:        "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(".842s, estimated 1s\nRan all "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("test")]),t._v(" suites.\n")])])]),a("h2",{attrs:{id:"ut中的异常处理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ut中的异常处理"}},[t._v("#")]),t._v(" UT中的异常处理")]),t._v(" "),a("p",[t._v("当我们考虑测试中未覆盖到的场景的时候，你是否想到函数处理异常的情况？\n如果我们出入的是数字以外的参数会怎么样呢？")]),t._v(" "),a("p",[t._v("在"),a("code",[t._v("sum.spec.js")]),t._v("中添加下边的case：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Should raise an error if one of the inputs is not a number"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("expect")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sum")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toThrowError")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Both arguments must be numbers"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("我们来看一下这个case做了什么：\n首先，我们使用一个匿名函数来包装了我们的被测函数： "),a("code",[t._v('() => sum("0", -2)')]),t._v("\n.这是因为任何一个未被捕获的异常都会导致测试的失败。")]),t._v(" "),a("p",[t._v("在我们的例子中，当我们传入的参数不是数字时，"),a("code",[t._v("sum")]),t._v("函数会抛出异常。在这里我们认为抛出异常是期望行为，所以测试结果应该是"),a("code",[t._v("passing")]),t._v("而不是"),a("code",[t._v("failure")]),t._v(".")]),t._v(" "),a("p",[t._v("因此，我们使用匿名函数来包装"),a("code",[t._v('sum("0", -2)')]),t._v(",并且引入一个新的匹配器："),a("code",[t._v("toThrowError")]),t._v("("),a("a",{attrs:{href:"https://facebook.github.io/jest/docs/expect.html#tothrowerror",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://facebook.github.io/jest/docs/expect.html#tothrowerror"),a("OutboundLink")],1),t._v(").")]),t._v(" "),a("p",[t._v("再次运行测试，我们会得到如下错误：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("FAIL  ./sum.spec.js\n  ● "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sum")]),t._v(" suite › Should raise an error "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" one of the inputs is not a number\n\n    expect"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("function"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(".toThrowError"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("string"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    Expected the "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" to throw an error matching:\n      "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Both arguments must be numbers"')]),t._v("\n    But it didn't throw anything.\n\n      at Object."),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("anonymous"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sum.spec.js:25:36"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      at Promise.resolve.then.el "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node_modules/p-map/index.js:42:16"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      at process._tickCallback "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("internal/process/next_tick.js:103:7"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("测试结果明确指出问题：")]),t._v(" "),a("ul",[a("li",[t._v("期望结果是：'to throw an error matching:\"Both arguments must be numbers\"'，而实际得到的结果却是：'it didn't throw anything'.")]),t._v(" "),a("li",[t._v("通过stack trace: "),a("code",[t._v("at Object.<anonymous> (sum.spec.js:25:36)")]),t._v("，我们可以找到出错的函数和它对应的参数。根据提示中的行号和列号，我们可以看到断言："),a("code",[t._v("expect(() => sum(\"0\",-2)).toThrowError('Both arguments must be numbers')")]),t._v(".")])]),t._v(" "),a("p",[t._v("结论就是：我们的测试没有覆盖到这个bug。 那我们现在就着手来修复它吧。")]),t._v(" "),a("p",[t._v("修改我们的代码("),a("code",[t._v("sum.js")]),t._v("),让它能够检测到错误的参数类型并抛出异常：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("module"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("exports")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sum")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"number"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" b "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"number"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Error")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Both arguments must be numbers"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("再次运行测试，我们就可以得到"),a("code",[t._v("passing")]),t._v("的结果啦。")]),t._v(" "),a("p",[t._v("Note:\n在我们的教程中，我们在"),a("code",[t._v("sum")]),t._v("函数实现之前，先添加了测试用例，然后导致了我们结果失败。接着我们去"),a("code",[t._v("sum")]),t._v("函数中添加代码逻辑来修复测试中发现的错误，知道结果变为"),a("code",[t._v("passing")]),t._v("。 在添加新的代码或修复已有问题的时候，你应该遵循以上流程。")]),t._v(" "),a("h2",{attrs:{id:"提高测试效率"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#提高测试效率"}},[t._v("#")]),t._v(" 提高测试效率")]),t._v(" "),a("p",[t._v("进行到此处，你可能发现每当我们修改了代码，都需要手动去运行我们的测试。这将极大地影响我们的开发效率。幸运的是，大部分的runner都可以去监控磁盘文件的变化，并自动触发测试运行。")]),t._v(" "),a("p",[t._v("修改"),a("code",[t._v("package.json")]),t._v("来开启该功能：")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[t._v(" "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"scripts"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"test"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"jest --watch"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("再次运行测试，我们会发现在测试结束后runner不再退出，而且当我们修改"),a("code",[t._v("sum.js")]),t._v("或者"),a("code",[t._v("sum.spec.js")]),t._v("后，测试将会自动运行。")]),t._v(" "),a("h2",{attrs:{id:"下面开始技术总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#下面开始技术总结"}},[t._v("#")]),t._v(" 下面开始技术总结")]),t._v(" "),a("ul",[a("li",[t._v("将测试相关依赖包安装到项目(不要使用全局安装)。这样可以同时运行多个项目且每个项目可独立升级。同时，这也更方便我们将项目的配置分享给他人。")]),t._v(" "),a("li",[t._v("将测试运行命令写入到"),a("code",[t._v("NPM script")]),t._v("中，这样就不需要去记住这些复杂的测试命令。并且这样可以将测试抽象出来，不论使用的什么样的测试runner都可以用相同的方式运行测试。")]),t._v(" "),a("li",[t._v("每一个代码文件都应该有一个与之对应的"),a("code",[t._v(".spec")]),t._v("文件，并且最好和该文件放在同一目录下。这样便于快速找到测试相关信息，且有助于其他开发者对组件的了解。")]),t._v(" "),a("li",[a("code",[t._v("test")]),t._v("语句中的描述信息是非常重要的：确保它能够很清晰地描述出期望的条件。 可参照模板：'Should [what's to be expected] when [under which circumstances]'。")]),t._v(" "),a("li",[t._v("每条测试只应该测试一种行为。不要将多个测试场景放到一条测试中，而是应该为每一个测试场景创建相应的case，并清楚地命名和描述它们。")]),t._v(" "),a("li",[t._v("总是在实现或修改代码前，先创建一个"),a("code",[t._v("FAILING")]),t._v("的测试。")])])])}),[],!1,null,null,null);s.default=e.exports}}]);